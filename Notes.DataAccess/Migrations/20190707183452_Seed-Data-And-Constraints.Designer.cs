// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Notes.DataAccess;

namespace Notes.DataAccess.Migrations
{
    [DbContext(typeof(CustomerContext))]
    [Migration("20190707183452_Seed-Data-And-Constraints")]
    partial class SeedDataAndConstraints
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Notes.DataAccess.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(256);

                    b.Property<string>("Company")
                        .HasMaxLength(256);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1 High Street, Edinburgh",
                            Company = "Amalgamated Holdings",
                            Created = new DateTime(2019, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "joe@bloggs.com",
                            FirstName = "Joe",
                            LastName = "Bloggs",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 High Street, Edinburgh",
                            Company = "SoleTrader LLP",
                            Created = new DateTime(2010, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "a@smith.com",
                            FirstName = "Andrea",
                            LastName = "Smith",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "29 Acacia Road, Edinburgh",
                            Company = "Twist Incorporated",
                            Created = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "z@twist.com",
                            FirstName = "Zachry",
                            LastName = "Twist",
                            Status = 2
                        });
                });

            modelBuilder.Entity("Notes.DataAccess.Entities.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<int>("CustomerId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "My first note",
                            CustomerId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Prospective customer, follow up on lead",
                            CustomerId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Current customer, due quarterly sales review",
                            CustomerId = 2
                        },
                        new
                        {
                            Id = 4,
                            Content = "For review",
                            CustomerId = 2
                        },
                        new
                        {
                            Id = 5,
                            Content = "Sales order follow up",
                            CustomerId = 2
                        });
                });

            modelBuilder.Entity("Notes.DataAccess.Entities.Note", b =>
                {
                    b.HasOne("Notes.DataAccess.Entities.Customer", "Customer")
                        .WithMany("Notes")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
